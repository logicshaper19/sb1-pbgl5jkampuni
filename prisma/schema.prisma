datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id                String      @id @default(cuid())
  name              String
  registrationNumber String      @unique
  registrationDate  DateTime
  status            CompanyStatus @default(ACTIVE)
  address           Address?    @relation(fields: [addressId], references: [id])
  addressId         String?
  contactInfo       ContactInfo? @relation(fields: [contactInfoId], references: [id])
  contactInfoId     String?
  directors         Director[]
  shareholders      Shareholder[]
  encumbrances      Encumbrance[]
  tenders           Tender[]
  financialResults  FinancialResult[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model Address {
  id          String    @id @default(cuid())
  postalCode  String?
  county      String?
  district    String?
  locality    String?
  street      String?
  building    String?
  postalAddress String?
  companies   Company[]
}

model ContactInfo {
  id          String    @id @default(cuid())
  email       String?
  phone       String?
  companies   Company[]
}

model Director {
  id              String    @id @default(cuid())
  name            String
  role            String?
  address         String?
  nationality     String?
  appointmentDate DateTime?
  company         Company   @relation(fields: [companyId], references: [id])
  companyId       String
}

model Shareholder {
  id              String    @id @default(cuid())
  name            String
  shares          Int
  nationality     String?
  company         Company   @relation(fields: [companyId], references: [id])
  companyId       String
}

model Encumbrance {
  id          String    @id @default(cuid())
  type        String
  amount      Float
  date        DateTime
  status      String
  description String?
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   String
}

model Tender {
  id              String    @id @default(cuid())
  projectName     String
  amount          Float
  awardDate       DateTime
  completionStatus String
  governmentEntity String
  company         Company   @relation(fields: [companyId], references: [id])
  companyId       String
}

model FinancialResult {
  id            String    @id @default(cuid())
  year          Int
  revenue       Float
  profit        Float
  assets        Float
  liabilities   Float
  employeeCount Int
  company       Company   @relation(fields: [companyId], references: [id])
  companyId     String
}

enum CompanyStatus {
  ACTIVE
  INACTIVE
  DISSOLVED
}