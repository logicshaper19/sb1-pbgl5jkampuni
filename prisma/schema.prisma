generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id                 String            @id @default(cuid())
  name               String
  registrationNumber String            @unique
  registrationDate   DateTime
  status             String            @default("ACTIVE")
  addressId          String?
  contactInfoId      String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  contactInfo        ContactInfo?      @relation(fields: [contactInfoId], references: [id])
  address            Address?          @relation(fields: [addressId], references: [id])
  directors          Director[]
  encumbrances       Encumbrance[]
  financialResults   FinancialResult[]
  shareholders       Shareholder[]
  tenders            Tender[]
  contacts           Contact[]
}

model Address {
  id            String    @id @default(cuid())
  postalCode    String?
  county        String?
  district      String?
  locality      String?
  street        String?
  building      String?
  postalAddress String?
  companies     Company[]
}

model ContactInfo {
  id        String    @id @default(cuid())
  email     String?
  phone     String?
  companies Company[]
}

model Director {
  id              String    @id @default(cuid())
  name            String
  role            String?
  address         String?
  nationality     String?
  appointmentDate DateTime?
  companyId       String
  company         Company   @relation(fields: [companyId], references: [id])
}

model Shareholder {
  id          String  @id @default(cuid())
  name        String
  shares      Int
  nationality String?
  address     String?
  companyId   String
  company     Company @relation(fields: [companyId], references: [id])
}

model Encumbrance {
  id          String   @id @default(cuid())
  type        String
  amount      Float
  date        DateTime
  status      String
  description String?
  companyId   String
  company     Company  @relation(fields: [companyId], references: [id])
}

model Tender {
  id               String   @id @default(cuid())
  projectName      String
  amount           Float
  awardDate        DateTime
  completionStatus String
  governmentEntity String
  companyId        String
  company          Company  @relation(fields: [companyId], references: [id])
}

model FinancialResult {
  id            String  @id @default(cuid())
  year          Int
  revenue       Float
  profit        Float
  assets        Float
  liabilities   Float
  employeeCount Int
  companyId     String
  company       Company @relation(fields: [companyId], references: [id])
}

model Contact {
  id        String   @id @default(cuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  // ... other contact fields
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  // ... other fields
}
