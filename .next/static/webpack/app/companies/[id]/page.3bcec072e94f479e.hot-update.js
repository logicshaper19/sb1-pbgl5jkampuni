"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/companies/[id]/page",{

/***/ "(app-pages-browser)/./src/components/network/NetworkGraph.tsx":
/*!*************************************************!*\
  !*** ./src/components/network/NetworkGraph.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NetworkGraph: function() { return /* binding */ NetworkGraph; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ NetworkGraph auto */ \nvar _s = $RefreshSig$();\n\n\nfunction NetworkGraph(param) {\n    let { companyId, companyName, directors, shareholders } = param;\n    _s();\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [expandedNodes, setExpandedNodes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map());\n    const [expandedLinks, setExpandedLinks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const width = 1000;\n    const height = 400;\n    const padding = 100;\n    // Function to fetch related companies\n    const handleNodeClick = async (personId)=>{\n        try {\n            const response = await fetch(\"/api/people/\".concat(personId, \"/companies\"));\n            const data = await response.json();\n            // Update nodes and links with new data\n            const newNodes = new Map(expandedNodes);\n            const newLinks = [\n                ...expandedLinks\n            ];\n            data.companies.forEach((company)=>{\n                if (company.id !== companyId) {\n                    newNodes.set(company.id, {\n                        id: company.id,\n                        name: company.name,\n                        type: \"company\"\n                    });\n                    newLinks.push({\n                        source: personId,\n                        target: company.id,\n                        type: \"related\"\n                    });\n                }\n            });\n            setExpandedNodes(newNodes);\n            setExpandedLinks(newLinks);\n        } catch (error) {\n            console.error(\"Error fetching related companies:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n        // Prepare data with deduplication\n        const uniqueNodes = new Map();\n        const links = [];\n        // Add base company and its relationships\n        uniqueNodes.set(companyId, {\n            id: companyId,\n            name: companyName,\n            type: \"company\"\n        });\n        // Add directors and their links\n        directors.forEach((d)=>{\n            uniqueNodes.set(d.id, {\n                id: d.id,\n                name: d.name,\n                type: \"director\"\n            });\n            links.push({\n                source: d.id,\n                target: companyId,\n                type: \"director\"\n            });\n        });\n        // Add shareholders and their links\n        shareholders.forEach((s)=>{\n            uniqueNodes.set(s.id, {\n                id: s.id,\n                name: s.name,\n                type: \"shareholder\",\n                value: s.percentage\n            });\n            links.push({\n                source: s.id,\n                target: companyId,\n                type: \"shareholder\",\n                value: s.percentage\n            });\n        });\n        // Add expanded nodes and links\n        expandedNodes.forEach((node, id)=>uniqueNodes.set(id, node));\n        links.push(...expandedLinks);\n        const nodes = Array.from(uniqueNodes.values());\n        // Create simulation\n        const simulation = d3__WEBPACK_IMPORTED_MODULE_2__.forceSimulation(nodes).force(\"link\", d3__WEBPACK_IMPORTED_MODULE_2__.forceLink(links).id((d)=>d.id).distance(200)).force(\"charge\", d3__WEBPACK_IMPORTED_MODULE_2__.forceManyBody().strength(-2000)).force(\"collide\", d3__WEBPACK_IMPORTED_MODULE_2__.forceCollide().radius((d)=>d.type === \"company\" ? 100 : 80).strength(1)).force(\"center\", d3__WEBPACK_IMPORTED_MODULE_2__.forceCenter(width / 2, height / 2)).force(\"x\", d3__WEBPACK_IMPORTED_MODULE_2__.forceX(width / 2).strength(0.1)).force(\"y\", d3__WEBPACK_IMPORTED_MODULE_2__.forceY(height / 2).strength(0.1));\n        // Create SVG elements\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).attr(\"width\", width).attr(\"height\", height);\n        // Add background\n        svg.append(\"rect\").attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"white\");\n        // Create container for graph\n        const graphContainer = svg.append(\"g\");\n        // Add links\n        const link = graphContainer.append(\"g\").selectAll(\"line\").data(links).join(\"line\").attr(\"stroke\", (d)=>{\n            switch(d.type){\n                case \"director\":\n                    return \"#9333ea\";\n                case \"shareholder\":\n                    return \"#2563eb\";\n                case \"related\":\n                    return \"#64748b\";\n                default:\n                    return \"#gray\";\n            }\n        }).attr(\"stroke-width\", 2).attr(\"stroke-opacity\", 0.6);\n        // Add nodes with click handler\n        const node = graphContainer.append(\"g\").selectAll(\"g\").data(nodes).join(\"g\").call(d3__WEBPACK_IMPORTED_MODULE_2__.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d)=>{\n            if (d.type === \"director\" || d.type === \"shareholder\") {\n                handleNodeClick(d.id);\n            }\n        });\n        // Add circles for nodes\n        node.append(\"circle\").attr(\"r\", (d)=>d.type === \"company\" ? 30 : 20).attr(\"fill\", (d)=>{\n            switch(d.type){\n                case \"company\":\n                    return \"#ef4444\";\n                case \"director\":\n                    return \"#9333ea\";\n                case \"shareholder\":\n                    return \"#2563eb\";\n                default:\n                    return \"#gray\";\n            }\n        }).attr(\"stroke\", \"#ffffff\").attr(\"stroke-width\", 2);\n        // Add labels\n        node.append(\"text\").attr(\"dx\", (d)=>d.type === \"company\" ? 40 : 25).attr(\"dy\", 5).text((d)=>d.name).attr(\"fill\", \"#1f2937\").attr(\"font-size\", \"14px\").attr(\"font-weight\", (d)=>d.type === \"company\" ? \"bold\" : \"normal\");\n        // Add legend\n        const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", \"translate(\".concat(padding / 2, \", \").concat(padding / 2, \")\"));\n        const legendData = [\n            {\n                type: \"company\",\n                color: \"#ef4444\",\n                label: \"Company\"\n            },\n            {\n                type: \"director\",\n                color: \"#9333ea\",\n                label: \"Director\"\n            },\n            {\n                type: \"shareholder\",\n                color: \"#2563eb\",\n                label: \"Shareholder\"\n            },\n            {\n                type: \"related\",\n                color: \"#64748b\",\n                label: \"Related\"\n            }\n        ];\n        const legendItems = legend.selectAll(\".legend-item\").data(legendData).enter().append(\"g\").attr(\"class\", \"legend-item\").attr(\"transform\", (d, i)=>\"translate(0, \".concat(i * 25, \")\"));\n        // Add colored circles to legend\n        legendItems.append(\"circle\").attr(\"r\", 6).attr(\"fill\", (d)=>d.color);\n        // Add text labels to legend\n        legendItems.append(\"text\").attr(\"x\", 15).attr(\"y\", 5).text((d)=>d.label).attr(\"font-size\", \"14px\").attr(\"fill\", \"#4b5563\");\n        // Update positions on tick\n        simulation.on(\"tick\", ()=>{\n            // Constrain nodes within boundaries\n            nodes.forEach((node)=>{\n                node.x = Math.max(padding, Math.min(width - padding, node.x));\n                node.y = Math.max(padding, Math.min(height - padding, node.y));\n            });\n            link.attr(\"x1\", (d)=>d.source.x).attr(\"y1\", (d)=>d.source.y).attr(\"x2\", (d)=>d.target.x).attr(\"y2\", (d)=>d.target.y);\n            node.attr(\"transform\", (d)=>\"translate(\".concat(d.x, \",\").concat(d.y, \")\"));\n        });\n        function dragstarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n        }\n        function dragged(event) {\n            event.subject.fx = Math.max(padding, Math.min(width - padding, event.x));\n            event.subject.fy = Math.max(padding, Math.min(height - padding, event.y));\n        }\n        function dragended(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n        }\n    }, [\n        companyId,\n        companyName,\n        directors,\n        shareholders,\n        expandedNodes,\n        expandedLinks\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-[400px] bg-white rounded-lg shadow p-4 mb-8\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            ref: svgRef,\n            className: \"w-full h-full\"\n        }, void 0, false, {\n            fileName: \"/Users/elisha/usekampuni/src/components/network/NetworkGraph.tsx\",\n            lineNumber: 271,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/elisha/usekampuni/src/components/network/NetworkGraph.tsx\",\n        lineNumber: 270,\n        columnNumber: 5\n    }, this);\n}\n_s(NetworkGraph, \"vgfv+Fc/8VtslGePbjQBgcy+1Do=\");\n_c = NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/network/NetworkGraph.tsx\n"));

/***/ })

});